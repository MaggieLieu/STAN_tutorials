require(rstan)
set.seed(1) #set seed
data = read.csv('/Users/maggielieu/Desktop/STAN/GITHUB/STAN_tutorials/Hierarchical/premiereleague.csv',col.names = c('Home','score1', 'score2', 'Away'), stringsAsFactors = FALSE)
data
ng = nrow(data)
cat('we have G =', ng, 'games \n')
nt = length(unique(data$Home))
cat('we have T = ', nt, 'teams \n')
teams = unique(data$Home)
ht = unlist(sapply(1:ng, function(g) which(teams == data$Home[g])))
at = unlist(sapply(1:ng, function(g) which(teams == data$Away[g])))
# we will save the last 5 games to predict
np=5
ngob = ng-np
my_data = list(
nt = nt,
ng = ngob,
ht = ht[1:ngob],
at = at[1:ngob],
s1 = data$score1[1:ngob],
s2 = data$score2[1:ngob],
np = np,
htnew = ht[(ngob+1):ng],
atnew = at[(ngob+1):ng]
)
# we will save the last 5 games to predict
np=5
ngob = ng-np
my_data = list(
nt = nt,
ng = ngob,
ht = ht[1:ngob],
at = at[1:ngob],
s1 = data$score1[1:ngob],
s2 = data$score2[1:ngob],
np = np,
htnew = ht[(ngob+1):ng],
atnew = at[(ngob+1):ng]
)
nhfit = stan(file = 'non_hier_model.stan', data = my_data)
par(mfrow=c(5,2), mar=c(0,0,0,0), oma=c(4,4,1,1))
nhparams = extract(nhfit)
lb = c(FALSE,FALSE,FALSE,FALSE,TRUE)
for(i in 1:5){
plot(density(nhparams$s1new[,i]), main='', xlab = '', ylab='', xlim=c(0,10),xaxt='n',yaxt='n', ann=FALSE)
axis(side=1, tck=0.05,labels=lb[i], at = seq(0,10))
abline(v=data$score1[ngob+i],col='red')
legend('topright', legend=c(data$Home[ngob+i]),bty='n')
plot(density(nhparams$s2new[,i]), main='', xlab = '', ylab='', xlim=c(0,10),xaxt='n',yaxt='n', ann=FALSE)
axis(side=1, tck=0.05,labels=lb[i], at = seq(0,10))
abline(v=data$score2[ngob+i],col='red')
legend('topright', legend=c(data$Away[ngob+i]),bty='n')
}
mtext('score',side=1, outer=TRUE, line=2)
mtext('density',side=2, outer=TRUE, line=2)
colMeans(nhparams$s1new)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,6), ylim=c(0,6), pch=20)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,6), ylim=c(0,6), pch=20)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,6), ylim=c(0,6), pch=20)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,6), ylim=c(0,6), pch=20)
abline(a=0,  b=1, lty='dashed)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,6), ylim=c(0,6), pch=20)
abline(a=0,  b=1, lty='dashed')
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,6), ylim=c(0,6), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
nhfit = stan(file = 'non_hier_model.stan', data = my_data)
nhparams = extract(nhfit)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,6), ylim=c(0,6), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
nhparams = extract(nhfit)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(nhparams$s1new[,x])),sapply(1:np, function(x) sd(nhparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,6), ylim=c(0,6), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
nhparams = extract(nhfit)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(nhparams$s1new[,x])),sapply(1:np, function(x) sd(nhparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,4), ylim=c(0,4), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
nhparams = extract(nhfit)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(nhparams$s1new[,x])),sapply(1:np, function(x) sd(nhparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,4), ylim=c(0,4), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
nhfit = stan(file = 'non_hier_model.stan', data = my_data)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,6), ylim=c(0,6), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
pred_errors = c(sapply(1:np, function(x) sd(nhparams$s1new[,x])),sapply(1:np, function(x) sd(nhparams$s1new[,x])))
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
par(mfrow=c(5,2), mar=c(0,0,0,0), oma=c(4,4,1,1))
nhparams = extract(nhfit)
lb = c(FALSE,FALSE,FALSE,FALSE,TRUE)
for(i in 1:5){
plot(density(nhparams$s1new[,i]), main='', xlab = '', ylab='', xlim=c(0,10),xaxt='n',yaxt='n', ann=FALSE)
axis(side=1, tck=0.05,labels=lb[i], at = seq(0,10))
abline(v=data$score1[ngob+i],col='red')
legend('topright', legend=c(data$Home[ngob+i]),bty='n')
plot(density(nhparams$s2new[,i]), main='', xlab = '', ylab='', xlim=c(0,10),xaxt='n',yaxt='n', ann=FALSE)
axis(side=1, tck=0.05,labels=lb[i], at = seq(0,10))
abline(v=data$score2[ngob+i],col='red')
legend('topright', legend=c(data$Away[ngob+i]),bty='n')
}
mtext('score',side=1, outer=TRUE, line=2)
mtext('density',side=2, outer=TRUE, line=2)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,6), ylim=c(0,6), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
pred_errors = c(sapply(1:np, function(x) sd(nhparams$s1new[,x])),sapply(1:np, function(x) sd(nhparams$s1new[,x])))
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,6), ylim=c(0,6), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
pred_errors = c(sapply(1:np, function(x) sd(nhparams$s1new[,x])),sapply(1:np, function(x) sd(nhparams$s1new[,x])))
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3, col=rgb(0,0,0,0.3))
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,5), ylim=c(0,5), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
pred_errors = c(sapply(1:np, function(x) sd(nhparams$s1new[,x])),sapply(1:np, function(x) sd(nhparams$s1new[,x])))
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3, col=rgb(0,0,0,0.3))
nhparams = extract(nhfit)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(nhparams$s1new[,x])),sapply(1:np, function(x) sd(nhparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,4), ylim=c(0,4), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
nhfit = stan(file = 'non_hier_model_pool.stan', data = my_data)
nhparams = extract(nhfit)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(nhparams$s1new[,x])),sapply(1:np, function(x) sd(nhparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,4), ylim=c(0,4), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
attack = colMeans(nhparams$att)
defense = colMeans(nhparams$def)
plot(attack,defense,xlim=c(-0.4,1.1))
abline(h=0)
abline(v=0)
text(attack,defense, labels=teams, cex=0.7, pos=4)
hfit = stan(file = 'hier_model.stan', data = my_data)
pairs(hfit, pars=c('mu_att', 'tau_att', 'mu_def', 'tau_def'))
hparams = extract(hfit)
par(mfrow=c(5,2), mar=c(0,0,0,0), oma=c(4,4,1,1))
lb = c(FALSE,FALSE,FALSE,FALSE,TRUE)
for(i in 1:5){
plot(density(hparams$s1new[,i]), main='', xlab = '', ylab='', xlim=c(0,10),xaxt='n',yaxt='n', ann=FALSE)
axis(side=1, tck=0.05,labels=lb[i], at = seq(0,10))
abline(v=data$score1[ngob+i],col='red')
legend('topright', legend=c(data$Home[ngob+i]),bty='n')
plot(density(hparams$s2new[,i]), main='', xlab = '', ylab='', xlim=c(0,10),xaxt='n',yaxt='n', ann=FALSE)
axis(side=1, tck=0.05,labels=lb[i], at = seq(0,10))
abline(v=data$score2[ngob+i],col='red')
legend('topright', legend=c(data$Away[ngob+i]),bty='n')
}
mtext('score',side=1, outer=TRUE, line=2)
mtext('density',side=2, outer=TRUE, line=2)
pred_scores = c(colMeans(hparams$s1new),colMeans(hparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(hparams$s1new[,x])),sapply(1:np, function(x) sd(hparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,4), ylim=c(0,4), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
print(hfit)
pairs(hfit, pars=c('mu_att', 'tau_att', 'mu_def', 'tau_def'))
hparams = extract(hfit)
par(mfrow=c(5,2), mar=c(0,0,0,0), oma=c(4,4,1,1))
lb = c(FALSE,FALSE,FALSE,FALSE,TRUE)
for(i in 1:5){
plot(density(hparams$s1new[,i]), main='', xlab = '', ylab='', xlim=c(0,10),xaxt='n',yaxt='n', ann=FALSE)
axis(side=1, tck=0.05,labels=lb[i], at = seq(0,10))
abline(v=data$score1[ngob+i],col='red')
legend('topright', legend=c(data$Home[ngob+i]),bty='n')
plot(density(hparams$s2new[,i]), main='', xlab = '', ylab='', xlim=c(0,10),xaxt='n',yaxt='n', ann=FALSE)
axis(side=1, tck=0.05,labels=lb[i], at = seq(0,10))
abline(v=data$score2[ngob+i],col='red')
legend('topright', legend=c(data$Away[ngob+i]),bty='n')
}
mtext('score',side=1, outer=TRUE, line=2)
mtext('density',side=2, outer=TRUE, line=2)
pred_scores = c(colMeans(hparams$s1new),colMeans(hparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(hparams$s1new[,x])),sapply(1:np, function(x) sd(hparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,4), ylim=c(0,4), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
pred_scores = c(colMeans(hparams$s1new),colMeans(hparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(hparams$s1new[,x])),sapply(1:np, function(x) sd(hparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,4), ylim=c(0,4), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
pairs(hfit, pars=c('mu_att', 'tau_att', 'mu_def', 'tau_def'))
hparams = extract(hfit)
par(mfrow=c(5,2), mar=c(0,0,0,0), oma=c(4,4,1,1))
lb = c(FALSE,FALSE,FALSE,FALSE,TRUE)
for(i in 1:5){
plot(density(hparams$s1new[,i]), main='', xlab = '', ylab='', xlim=c(0,10),xaxt='n',yaxt='n', ann=FALSE)
axis(side=1, tck=0.05,labels=lb[i], at = seq(0,10))
abline(v=data$score1[ngob+i],col='red')
legend('topright', legend=c(data$Home[ngob+i]),bty='n')
plot(density(hparams$s2new[,i]), main='', xlab = '', ylab='', xlim=c(0,10),xaxt='n',yaxt='n', ann=FALSE)
axis(side=1, tck=0.05,labels=lb[i], at = seq(0,10))
abline(v=data$score2[ngob+i],col='red')
legend('topright', legend=c(data$Away[ngob+i]),bty='n')
}
mtext('score',side=1, outer=TRUE, line=2)
mtext('density',side=2, outer=TRUE, line=2)
pred_scores = c(colMeans(hparams$s1new),colMeans(hparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(hparams$s1new[,x])),sapply(1:np, function(x) sd(hparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,4), ylim=c(0,4), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
attack = colMeans(hparams$att)
attacksd = sapply(1:nt, function(x) sd(hparams$att[,x]))
defense = colMeans(hparams$def)
defensesd = sapply(1:nt, function(x) sd(hparams$def[,x]))
plot(attack,defense, xlim=c(-0.4,1), ylim=c(-0.45,0.3), pch=20)
arrows(attack-attacksd, defense, attack+attacksd, defense, code=3, angle = 90, length = 0.04, col=rgb(0,0,0,0.2))
arrows(attack, defense-defensesd, attack, defense+defensesd, code=3, angle = 90, length = 0.04,col=rgb(0,0,0,0.2))
#abline(h=0)
#abline(v=0)
text(attack,defense, labels=teams, cex=0.7, adj=c(-0.05,-0.8) )
homescores = sapply(1:nt, function(x) sum(data$score1[which(ht == x)]))
awayscores = sapply(1:nt, function(x) sum(data$score2[which(at == x)]))
homelosses = sapply(1:nt, function(x) sum(data$score2[which(ht == x)]))
awaylosses = sapply(1:nt, function(x) sum(data$score1[which(at == x)]))
totalscores = homescores+awayscores
totallosses = homelosses+awaylosses
plot(totalscores,-totallosses,xlim=c(20,100))
text(totalscores,-totallosses, labels=teams, cex=0.7, pos=4, adj=c(-0.4))
pred_scores = c(colMeans(hparams$s1new),colMeans(hparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(hparams$s1new[,x])),sapply(1:np, function(x) sd(hparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,5), ylim=c(0,5), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
pred_scores = c(colMeans(hparams$s1new),colMeans(hparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(hparams$s1new[,x])),sapply(1:np, function(x) sd(hparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,5), ylim=c(0,5), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3, rgb(0,0,0,0.3))
hfit = stan(file = 'hier_model.stan', data = my_data)
pairs(hfit, pars=c('mu_att', 'tau_att', 'mu_def', 'tau_def'))
hparams = extract(hfit)
par(mfrow=c(5,2), mar=c(0,0,0,0), oma=c(4,4,1,1))
lb = c(FALSE,FALSE,FALSE,FALSE,TRUE)
for(i in 1:5){
plot(density(hparams$s1new[,i]), main='', xlab = '', ylab='', xlim=c(0,10),xaxt='n',yaxt='n', ann=FALSE)
axis(side=1, tck=0.05,labels=lb[i], at = seq(0,10))
abline(v=data$score1[ngob+i],col='red')
legend('topright', legend=c(data$Home[ngob+i]),bty='n')
plot(density(hparams$s2new[,i]), main='', xlab = '', ylab='', xlim=c(0,10),xaxt='n',yaxt='n', ann=FALSE)
axis(side=1, tck=0.05,labels=lb[i], at = seq(0,10))
abline(v=data$score2[ngob+i],col='red')
legend('topright', legend=c(data$Away[ngob+i]),bty='n')
}
mtext('score',side=1, outer=TRUE, line=2)
mtext('density',side=2, outer=TRUE, line=2)
pred_scores = c(colMeans(hparams$s1new),colMeans(hparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(hparams$s1new[,x])),sapply(1:np, function(x) sd(hparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,5), ylim=c(0,5), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3, rgb(0,0,0,0.3))
require(rstan)
set.seed(1) #set seed
data = read.csv('/Users/maggielieu/Desktop/STAN/GITHUB/STAN_tutorials/Hierarchical/premiereleague.csv',col.names = c('Home','score1', 'score2', 'Away'), stringsAsFactors = FALSE)
data
ng = nrow(data)
cat('we have G =', ng, 'games \n')
nt = length(unique(data$Home))
cat('we have T = ', nt, 'teams \n')
teams = unique(data$Home)
ht = unlist(sapply(1:ng, function(g) which(teams == data$Home[g])))
at = unlist(sapply(1:ng, function(g) which(teams == data$Away[g])))
# we will save the last 5 games to predict
np=5
ngob = ng-np
my_data = list(
nt = nt,
ng = ngob,
ht = ht[1:ngob],
at = at[1:ngob],
s1 = data$score1[1:ngob],
s2 = data$score2[1:ngob],
np = np,
htnew = ht[(ngob+1):ng],
atnew = at[(ngob+1):ng]
)
nhfit = stan(file = 'non_hier_model.stan', data = my_data)
nhfit = stan(file = 'non_hier_model.stan', data = my_data)
print(nhfit)
nhparams = extract(nhfit)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,5), ylim=c(0,5), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
pred_errors = c(sapply(1:np, function(x) sd(nhparams$s1new[,x])),sapply(1:np, function(x) sd(nhparams$s1new[,x])))
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3, col=rgb(0,0,0,0.3))
nhpoolfit = stan(file = 'non_hier_model_pool.stan', data = my_data)
nhpoolparams = extract(nhpoolfit)
pred_scores = c(colMeans(nhpoolparams$s1new),colMeans(nhpoolparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(nhpoolparams$s1new[,x])),sapply(1:np, function(x) sd(nhpoolparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,4), ylim=c(0,4), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
attack = colMeans(nhparams$att)
defense = colMeans(nhparams$def)
plot(attack,defense,xlim=c(-0.4,1.1))
abline(h=0)
abline(v=0)
text(attack,defense, labels=teams, cex=0.7, pos=4)
attack = colMeans(nhparams$att)
defense = colMeans(nhparams$def)
plot(attack,defense,xlim=c(-0.4,1.1))
abline(h=0)
abline(v=0)
text(attack,defense, labels=teams, cex=0.7, pos=4)
nhpoolparams = extract(nhpoolfit)
pred_scores = c(colMeans(nhpoolparams$s1new),colMeans(nhpoolparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(nhpoolparams$s1new[,x])),sapply(1:np, function(x) sd(nhpoolparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,4), ylim=c(0,4), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
attack = colMeans(nhparams$att)
defense = colMeans(nhparams$def)
plot(attack,defense,xlim=c(-0.4,1.1))
abline(h=0)
abline(v=0)
text(attack,defense, labels=teams, cex=0.7, pos=4)
attack = colMeans(nhpoolparams$att)
defense = colMeans(nhpoolparams$def)
plot(attack,defense,xlim=c(-0.4,1.1))
abline(h=0)
abline(v=0)
text(attack,defense, labels=teams, cex=0.7, pos=4)
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
pairs(hfit, pars=c('mu_att', 'tau_att', 'mu_def', 'tau_def'))
hparams = extract(hfit)
pred_scores = c(colMeans(hparams$s1new),colMeans(hparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(hparams$s1new[,x])),sapply(1:np, function(x) sd(hparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,5), ylim=c(0,5), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3, rgb(0,0,0,0.3))
hfit = stan(file = 'hier_model.stan', data = my_data)
hfit = stan(file = 'hier_model.stan', data = my_data)
hparams = extract(hfit)
pred_scores = c(colMeans(hparams$s1new),colMeans(hparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(hparams$s1new[,x])),sapply(1:np, function(x) sd(hparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,5), ylim=c(0,5), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3, rgb(0,0,0,0.3))
data = read.csv('/Users/maggielieu/Desktop/STAN/GITHUB/STAN_tutorials/Hierarchical/premiereleague.csv',col.names = c('Home','score1', 'score2', 'Away'), stringsAsFactors = FALSE)
require(rstan)
set.seed(1) #set seed
data = read.csv('/Users/maggielieu/Desktop/STAN/GITHUB/STAN_tutorials/Hierarchical/premiereleague.csv',col.names = c('Home','score1', 'score2', 'Away'), stringsAsFactors = FALSE)
data
ng = nrow(data)
cat('we have G =', ng, 'games \n')
nt = length(unique(data$Home))
cat('we have T = ', nt, 'teams \n')
teams = unique(data$Home)
ht = unlist(sapply(1:ng, function(g) which(teams == data$Home[g])))
at = unlist(sapply(1:ng, function(g) which(teams == data$Away[g])))
# we will save the last 5 games to predict
np=5
ngob = ng-np
my_data = list(
nt = nt,
ng = ngob,
ht = ht[1:ngob],
at = at[1:ngob],
s1 = data$score1[1:ngob],
s2 = data$score2[1:ngob],
np = np,
htnew = ht[(ngob+1):ng],
atnew = at[(ngob+1):ng]
)
nhfit = stan(file = 'non_hier_model.stan', data = my_data)
nhparams = extract(nhfit)
pred_scores = c(colMeans(nhparams$s1new),colMeans(nhparams$s2new))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,5), ylim=c(0,5), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
pred_errors = c(sapply(1:np, function(x) sd(nhparams$s1new[,x])),sapply(1:np, function(x) sd(nhparams$s1new[,x])))
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3, col=rgb(0,0,0,0.3))
attack = colMeans(nhparams$att)
defense = colMeans(nhparams$def)
plot(attack,defense,xlim=c(-0.4,1.1))
abline(h=0)
abline(v=0)
text(attack,defense, labels=teams, cex=0.7, pos=4)
nhpoolfit = stan(file = 'non_hier_model_pool.stan', data = my_data)
nhpoolparams = extract(nhpoolfit)
pred_scores = c(colMeans(nhpoolparams$s1new),colMeans(nhpoolparams$s2new))
pred_errors = c(sapply(1:np, function(x) sd(nhpoolparams$s1new[,x])),sapply(1:np, function(x) sd(nhpoolparams$s1new[,x])))
true_scores = c(data$score1[(ngob+1):ng],data$score2[(ngob+1):ng] )
plot(true_scores, pred_scores, xlim=c(0,4), ylim=c(0,4), pch=20, ylab='predicted scores', xlab='true scores')
abline(a=0,  b=1, lty='dashed')
arrows(true_scores, pred_scores+pred_errors, true_scores, pred_scores-pred_errors, length = 0.05, angle = 90, code = 3)
attack = colMeans(nhpoolparams$att)
defense = colMeans(nhpoolparams$def)
plot(attack,defense,xlim=c(-0.4,1.1))
abline(h=0)
abline(v=0)
text(attack,defense, labels=teams, cex=0.7, pos=4)
attack = colMeans(hparams$att)
attacksd = sapply(1:nt, function(x) sd(hparams$att[,x]))
defense = colMeans(hparams$def)
defensesd = sapply(1:nt, function(x) sd(hparams$def[,x]))
plot(attack,defense, xlim=c(-0.4,1), ylim=c(-0.45,0.3), pch=20)
arrows(attack-attacksd, defense, attack+attacksd, defense, code=3, angle = 90, length = 0.04, col=rgb(0,0,0,0.2))
arrows(attack, defense-defensesd, attack, defense+defensesd, code=3, angle = 90, length = 0.04,col=rgb(0,0,0,0.2))
#abline(h=0)
#abline(v=0)
text(attack,defense, labels=teams, cex=0.7, adj=c(-0.05,-0.8) )
