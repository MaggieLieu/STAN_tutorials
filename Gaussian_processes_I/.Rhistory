knitr::opts_chunk$set(echo = TRUE)
require(rstan)
require(shiny)
knitr::opts_chunk$set(echo = TRUE)
sim_gp = "
data {
int<lower=1> N; //number of data points
real x[N]; //data
real<lower=0> alpha;
real<lower=0> rho;
}
transformed data {
matrix[N,N] K = cov_exp_quad(x, alpha, rho) + diag_matrix(rep_vector(1e-9,N)); // Covariance function
vector[N] mu = rep_vector(0,N); //mean
}
generated quantities {
vector[N] f = multi_normal_rng(mu,K);
}
"
sim_gp = "
data {
int<lower=1> N; //number of data points
real x[N]; //data
real<lower=0> alpha;
real<lower=0> rho;
}
transformed data {
matrix[N,N] K = cov_exp_quad(x, alpha, rho) + diag_matrix(rep_vector(1e-9,N)); // Covariance function
vector[N] mu = rep_vector(0,N); //mean
}
generated quantities {
vector[N] f = multi_normal_rng(mu,K);
}
"
N=100
data = list(
N = N,
x = seq(-10, 10, length.out=N), #equally spaced points
alpha = 1,
rho = 1,
)
N=100
data = list(
N = N,
x = seq(-10, 10, length.out=N), #equally spaced points
alpha = 1,
rho = 1
)
ndraws = 50 # number of draws
fit = stan(model_code = sim_gp, data=data, algorithm ='Fixed_param',warmup = 0, chains = 1, iter=ndraws)
params = extract(fit)
quantile(params$f[1,],probs = c(0.05,0.95))
yconf = sapply(1:ndraws, function(x) quantile(params$f[x,], probs=c(0.05,0.95)))
yconf
yconf[1,]
yconf[2,]
plot(x, yconf[2,])
plot(data$x, yconf[2,])
dim(yconf)
dim(data$x)
len(data$x)
length(data$x)
dim(params$f)
yconf = sapply(1:ndraws, function(x) quantile(params$f[,x], probs=c(0.05,0.95)))
plot(x, yconf[1,])
plot(data$x, yconf[1,])
dim(yconf)
yconf = sapply(1:ndraws, function(x) quantile(params$f[,x], probs=c(0.05,0.95)))
yconf = sapply(1:N, function(x) quantile(params$f[,x], probs=c(0.05,0.95)))
dim(yconf)
plot(data$x, yconf[1,])
plot(data$x, yconf[2,])
N=100
data = list(
N = N,
x = seq(-10, 10, length.out=N), #equally spaced points
alpha = 1,
rho = 1
)
xr=c(0.5,10)
yr=c(-5,5)
plot(xr, yr, ty='n')
for(i in 1:ndraws){
lines(data$x, params$f[i,], pch=20, col=rgb(0,0.55,0.5, 0.2), cex=0.5)
}
points(data$x, params$f[ndraws,], pch=20, col='black', cex=1)
lines(data$x, colMeans(params$f),lwd=3)
xr=c(-10,10)
yr=c(-5,5)
plot(xr, yr, ty='n')
for(i in 1:ndraws){
lines(data$x, params$f[i,], pch=20, col=rgb(0,0.55,0.5, 0.2), cex=0.5)
}
points(data$x, params$f[ndraws,], pch=20, col='black', cex=1)
lines(data$x, colMeans(params$f),lwd=3)
plot(xr,yr, ty='n')
polygon(x=c(data$x, rev(data$x)), y=c(yconf[1,], rev(yconf[2,])))
plot(xr,yr, ty='n')
polygon(x=c(data$x, rev(data$x)), y=c(yconf[1,], rev(yconf[2,])), border=NA, col=rgb(0,0,0,0.1))
yconf = sapply(1:N, function(x) quantile(params$f[,x], probs=c(0.003,0.05,0.32,0.68,0.95,0.997)))
yconf
yconf[1,]
yconf
plot(xr,yr, ty='n')
polygon(x=c(data$x, rev(data$x)), y=c(yconf[1,], rev(yconf[4,])), border=NA, col=rgb(0,0,0,0.1))
polygon(x=c(data$x, rev(data$x)), y=c(yconf[2,], rev(yconf[5,])), border=NA, col=rgb(0,0,0,0.1))
polygon(x=c(data$x, rev(data$x)), y=c(yconf[3,], rev(yconf[6,])), border=NA, col=rgb(0,0,0,0.1))
plot(xr,yr, ty='n')
polygon(x=c(data$x, rev(data$x)), y=c(yconf[1,], rev(yconf[4,])), border=NA, col=rgb(0,0,0,0.1))
polygon(x=c(data$x, rev(data$x)), y=c(yconf[2,], rev(yconf[5,])), border=NA, col=rgb(0,0,0,0.1))
polygon(x=c(data$x, rev(data$x)), y=c(yconf[3,], rev(yconf[6,])), border=NA, col=rgb(0,0,0,0.1))
lines(data$x, colMeans(params$f),lwd=3)
